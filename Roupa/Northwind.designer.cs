#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Roupa
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Roupa")]
	public partial class NorthwindDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRoupa(Lync.Roupa instance);
    partial void UpdateRoupa(Lync.Roupa instance);
    partial void DeleteRoupa(Lync.Roupa instance);
    partial void InsertItem(Lync.Item instance);
    partial void UpdateItem(Lync.Item instance);
    partial void DeleteItem(Lync.Item instance);
    partial void InsertMarca(Lync.Marca instance);
    partial void UpdateMarca(Lync.Marca instance);
    partial void DeleteMarca(Lync.Marca instance);
    partial void InsertAcessorio(Lync.Acessorio instance);
    partial void UpdateAcessorio(Lync.Acessorio instance);
    partial void DeleteAcessorio(Lync.Acessorio instance);
    partial void InsertCategoria(Lync.Categoria instance);
    partial void UpdateCategoria(Lync.Categoria instance);
    partial void DeleteCategoria(Lync.Categoria instance);
    #endregion
		
		public NorthwindDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["RoupaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NorthwindDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NorthwindDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NorthwindDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NorthwindDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Lync.Roupa> Roupas
		{
			get
			{
				return this.GetTable<Lync.Roupa>();
			}
		}
		
		public System.Data.Linq.Table<Lync.Item> Items
		{
			get
			{
				return this.GetTable<Lync.Item>();
			}
		}
		
		public System.Data.Linq.Table<Lync.Marca> Marcas
		{
			get
			{
				return this.GetTable<Lync.Marca>();
			}
		}
		
		public System.Data.Linq.Table<Lync.Acessorio> Acessorios
		{
			get
			{
				return this.GetTable<Lync.Acessorio>();
			}
		}
		
		public System.Data.Linq.Table<Lync.Categoria> Categorias
		{
			get
			{
				return this.GetTable<Lync.Categoria>();
			}
		}
	}
}
namespace Lync
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roupa")]
	public partial class Roupa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IdRoupa;
		
		private string _Nome;
		
		private System.Nullable<System.Guid> _IdCategoria;
		
		private System.Nullable<System.Guid> _IdCor;
		
		private System.Nullable<System.Guid> _IdMaterial;
		
		private System.Nullable<System.Guid> _Idtamanho;
		
		private System.Nullable<System.Guid> _IdPreco;
		
		private System.Nullable<System.Guid> _IdAcessorio;
		
		private System.Nullable<System.Guid> _IdInformacoes;
		
		private System.Nullable<System.Guid> _IdMarca;
		
		private EntitySet<Item> _Items;
		
		private EntityRef<Marca> _Marca;
		
		private EntityRef<Categoria> _Categoria;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdRoupaChanging(System.Guid value);
    partial void OnIdRoupaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnIdCategoriaChanging(System.Nullable<System.Guid> value);
    partial void OnIdCategoriaChanged();
    partial void OnIdCorChanging(System.Nullable<System.Guid> value);
    partial void OnIdCorChanged();
    partial void OnIdMaterialChanging(System.Nullable<System.Guid> value);
    partial void OnIdMaterialChanged();
    partial void OnIdtamanhoChanging(System.Nullable<System.Guid> value);
    partial void OnIdtamanhoChanged();
    partial void OnIdPrecoChanging(System.Nullable<System.Guid> value);
    partial void OnIdPrecoChanged();
    partial void OnIdAcessorioChanging(System.Nullable<System.Guid> value);
    partial void OnIdAcessorioChanged();
    partial void OnIdInformacoesChanging(System.Nullable<System.Guid> value);
    partial void OnIdInformacoesChanged();
    partial void OnIdMarcaChanging(System.Nullable<System.Guid> value);
    partial void OnIdMarcaChanged();
    #endregion
		
		public Roupa()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._Marca = default(EntityRef<Marca>);
			this._Categoria = default(EntityRef<Categoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoupa", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IdRoupa
		{
			get
			{
				return this._IdRoupa;
			}
			set
			{
				if ((this._IdRoupa != value))
				{
					this.OnIdRoupaChanging(value);
					this.SendPropertyChanging();
					this._IdRoupa = value;
					this.SendPropertyChanged("IdRoupa");
					this.OnIdRoupaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCor", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IdCor
		{
			get
			{
				return this._IdCor;
			}
			set
			{
				if ((this._IdCor != value))
				{
					this.OnIdCorChanging(value);
					this.SendPropertyChanging();
					this._IdCor = value;
					this.SendPropertyChanged("IdCor");
					this.OnIdCorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMaterial", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IdMaterial
		{
			get
			{
				return this._IdMaterial;
			}
			set
			{
				if ((this._IdMaterial != value))
				{
					this.OnIdMaterialChanging(value);
					this.SendPropertyChanging();
					this._IdMaterial = value;
					this.SendPropertyChanged("IdMaterial");
					this.OnIdMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idtamanho", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Idtamanho
		{
			get
			{
				return this._Idtamanho;
			}
			set
			{
				if ((this._Idtamanho != value))
				{
					this.OnIdtamanhoChanging(value);
					this.SendPropertyChanging();
					this._Idtamanho = value;
					this.SendPropertyChanged("Idtamanho");
					this.OnIdtamanhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPreco", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IdPreco
		{
			get
			{
				return this._IdPreco;
			}
			set
			{
				if ((this._IdPreco != value))
				{
					this.OnIdPrecoChanging(value);
					this.SendPropertyChanging();
					this._IdPreco = value;
					this.SendPropertyChanged("IdPreco");
					this.OnIdPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAcessorio", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IdAcessorio
		{
			get
			{
				return this._IdAcessorio;
			}
			set
			{
				if ((this._IdAcessorio != value))
				{
					this.OnIdAcessorioChanging(value);
					this.SendPropertyChanging();
					this._IdAcessorio = value;
					this.SendPropertyChanged("IdAcessorio");
					this.OnIdAcessorioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdInformacoes", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IdInformacoes
		{
			get
			{
				return this._IdInformacoes;
			}
			set
			{
				if ((this._IdInformacoes != value))
				{
					this.OnIdInformacoesChanging(value);
					this.SendPropertyChanging();
					this._IdInformacoes = value;
					this.SendPropertyChanged("IdInformacoes");
					this.OnIdInformacoesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMarca", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> IdMarca
		{
			get
			{
				return this._IdMarca;
			}
			set
			{
				if ((this._IdMarca != value))
				{
					if (this._Marca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMarcaChanging(value);
					this.SendPropertyChanging();
					this._IdMarca = value;
					this.SendPropertyChanged("IdMarca");
					this.OnIdMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roupa_Item", Storage="_Items", ThisKey="IdRoupa", OtherKey="IdRoupa")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Roupa", Storage="_Marca", ThisKey="IdMarca", OtherKey="IdMarca", IsForeignKey=true)]
		public Marca Marca
		{
			get
			{
				return this._Marca.Entity;
			}
			set
			{
				Marca previousValue = this._Marca.Entity;
				if (((previousValue != value) 
							|| (this._Marca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca.Entity = null;
						previousValue.Roupas.Remove(this);
					}
					this._Marca.Entity = value;
					if ((value != null))
					{
						value.Roupas.Add(this);
						this._IdMarca = value.IdMarca;
					}
					else
					{
						this._IdMarca = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Marca");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Roupa", Storage="_Categoria", ThisKey="IdCategoria", OtherKey="IdCategoria", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Roupas.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Roupas.Add(this);
						this._IdCategoria = value.IdCategoria;
					}
					else
					{
						this._IdCategoria = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Roupa = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Roupa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IdItem;
		
		private System.Guid _IdRoupa;
		
		private System.Guid _IdAcessorio;
		
		private EntityRef<Roupa> _Roupa;
		
		private EntityRef<Acessorio> _Acessorio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdItemChanging(System.Guid value);
    partial void OnIdItemChanged();
    partial void OnIdRoupaChanging(System.Guid value);
    partial void OnIdRoupaChanged();
    partial void OnIdAcessorioChanging(System.Guid value);
    partial void OnIdAcessorioChanged();
    #endregion
		
		public Item()
		{
			this._Roupa = default(EntityRef<Roupa>);
			this._Acessorio = default(EntityRef<Acessorio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdItem", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IdItem
		{
			get
			{
				return this._IdItem;
			}
			set
			{
				if ((this._IdItem != value))
				{
					this.OnIdItemChanging(value);
					this.SendPropertyChanging();
					this._IdItem = value;
					this.SendPropertyChanged("IdItem");
					this.OnIdItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoupa", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IdRoupa
		{
			get
			{
				return this._IdRoupa;
			}
			set
			{
				if ((this._IdRoupa != value))
				{
					if (this._Roupa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRoupaChanging(value);
					this.SendPropertyChanging();
					this._IdRoupa = value;
					this.SendPropertyChanged("IdRoupa");
					this.OnIdRoupaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAcessorio", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IdAcessorio
		{
			get
			{
				return this._IdAcessorio;
			}
			set
			{
				if ((this._IdAcessorio != value))
				{
					if (this._Acessorio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAcessorioChanging(value);
					this.SendPropertyChanging();
					this._IdAcessorio = value;
					this.SendPropertyChanged("IdAcessorio");
					this.OnIdAcessorioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roupa_Item", Storage="_Roupa", ThisKey="IdRoupa", OtherKey="IdRoupa", IsForeignKey=true)]
		public Roupa Roupa
		{
			get
			{
				return this._Roupa.Entity;
			}
			set
			{
				Roupa previousValue = this._Roupa.Entity;
				if (((previousValue != value) 
							|| (this._Roupa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roupa.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Roupa.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._IdRoupa = value.IdRoupa;
					}
					else
					{
						this._IdRoupa = default(System.Guid);
					}
					this.SendPropertyChanged("Roupa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acessorio_Item", Storage="_Acessorio", ThisKey="IdAcessorio", OtherKey="IdAcessorio", IsForeignKey=true)]
		public Acessorio Acessorio
		{
			get
			{
				return this._Acessorio.Entity;
			}
			set
			{
				Acessorio previousValue = this._Acessorio.Entity;
				if (((previousValue != value) 
							|| (this._Acessorio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Acessorio.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Acessorio.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._IdAcessorio = value.IdAcessorio;
					}
					else
					{
						this._IdAcessorio = default(System.Guid);
					}
					this.SendPropertyChanged("Acessorio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Marca")]
	public partial class Marca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IdMarca;
		
		private string _Marca1;
		
		private EntitySet<Roupa> _Roupas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdMarcaChanging(System.Guid value);
    partial void OnIdMarcaChanged();
    partial void OnMarca1Changing(string value);
    partial void OnMarca1Changed();
    #endregion
		
		public Marca()
		{
			this._Roupas = new EntitySet<Roupa>(new Action<Roupa>(this.attach_Roupas), new Action<Roupa>(this.detach_Roupas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMarca", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IdMarca
		{
			get
			{
				return this._IdMarca;
			}
			set
			{
				if ((this._IdMarca != value))
				{
					this.OnIdMarcaChanging(value);
					this.SendPropertyChanging();
					this._IdMarca = value;
					this.SendPropertyChanged("IdMarca");
					this.OnIdMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Marca", Storage="_Marca1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Marca1
		{
			get
			{
				return this._Marca1;
			}
			set
			{
				if ((this._Marca1 != value))
				{
					this.OnMarca1Changing(value);
					this.SendPropertyChanging();
					this._Marca1 = value;
					this.SendPropertyChanged("Marca1");
					this.OnMarca1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Roupa", Storage="_Roupas", ThisKey="IdMarca", OtherKey="IdMarca")]
		public EntitySet<Roupa> Roupas
		{
			get
			{
				return this._Roupas;
			}
			set
			{
				this._Roupas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Roupas(Roupa entity)
		{
			this.SendPropertyChanging();
			entity.Marca = this;
		}
		
		private void detach_Roupas(Roupa entity)
		{
			this.SendPropertyChanging();
			entity.Marca = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Acessorio")]
	public partial class Acessorio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IdAcessorio;
		
		private string _Nome;
		
		private string _Descricao;
		
		private decimal _Preco;
		
		private System.Nullable<int> _Parcelas;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAcessorioChanging(System.Guid value);
    partial void OnIdAcessorioChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescricaoChanging(string value);
    partial void OnDescricaoChanged();
    partial void OnPrecoChanging(decimal value);
    partial void OnPrecoChanged();
    partial void OnParcelasChanging(System.Nullable<int> value);
    partial void OnParcelasChanged();
    #endregion
		
		public Acessorio()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAcessorio", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IdAcessorio
		{
			get
			{
				return this._IdAcessorio;
			}
			set
			{
				if ((this._IdAcessorio != value))
				{
					this.OnIdAcessorioChanging(value);
					this.SendPropertyChanging();
					this._IdAcessorio = value;
					this.SendPropertyChanged("IdAcessorio");
					this.OnIdAcessorioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descricao", DbType="VarChar(MAX)")]
		public string Descricao
		{
			get
			{
				return this._Descricao;
			}
			set
			{
				if ((this._Descricao != value))
				{
					this.OnDescricaoChanging(value);
					this.SendPropertyChanging();
					this._Descricao = value;
					this.SendPropertyChanged("Descricao");
					this.OnDescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preco", DbType="Decimal(10,2) NOT NULL")]
		public decimal Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parcelas", DbType="Int")]
		public System.Nullable<int> Parcelas
		{
			get
			{
				return this._Parcelas;
			}
			set
			{
				if ((this._Parcelas != value))
				{
					this.OnParcelasChanging(value);
					this.SendPropertyChanging();
					this._Parcelas = value;
					this.SendPropertyChanged("Parcelas");
					this.OnParcelasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Acessorio_Item", Storage="_Items", ThisKey="IdAcessorio", OtherKey="IdAcessorio")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Acessorio = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Acessorio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _IdCategoria;
		
		private string _Nome;
		
		private EntitySet<Roupa> _Roupas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCategoriaChanging(System.Guid value);
    partial void OnIdCategoriaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public Categoria()
		{
			this._Roupas = new EntitySet<Roupa>(new Action<Roupa>(this.attach_Roupas), new Action<Roupa>(this.detach_Roupas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Roupa", Storage="_Roupas", ThisKey="IdCategoria", OtherKey="IdCategoria")]
		public EntitySet<Roupa> Roupas
		{
			get
			{
				return this._Roupas;
			}
			set
			{
				this._Roupas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Roupas(Roupa entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Roupas(Roupa entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
}
#pragma warning restore 1591
